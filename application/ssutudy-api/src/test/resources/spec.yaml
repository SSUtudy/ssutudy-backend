openapi: 3.0.0
info:
  title: ssutudy-api
  version: '1.0'
  contact:
    email: skfk0135@gmail.com
  description: ssutudy API 스펙 문서
servers:
  - url: 'http://localhost:3000?test'
paths:
  /v1/auth/sign-in:
    post:
      summary: 로그인
      tags:
        - 인증
        - v1
      responses:
        '200':
          description: 로그인 성공한 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
              examples:
                example-1:
                  value:
                    accessToken: adfsadfasd.dafsklfjdsklaf.jfdklasdjfklasdf
                    user:
                      id: 0
                      name: 홍길동
                      major: 컴퓨터학부
                      email: email@gmail.com
        '400':
          description: 요청 바디 형식이 잘못됐을 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 비밀번호나 아이디 값이 틀려서 로그인 실패한 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-v1-auth-sign-in
      description: test
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequest'
  /v1/auth/sign-up:
    post:
      summary: 회원가입
      tags:
        - 인증
        - v1
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
              examples:
                example-1:
                  value:
                    accessToken: adfsadfasd.dafsklfjdsklaf.jfdklasdjfklasdf
                    user:
                      id: 0
                      name: 홍길동
                      major: 컴퓨터학부
                      email: email@gmail.com
        '400':
          description: 요청 바디 형식이 잘못됐을 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: 아이디가 중복될 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-v1-auth-sign-up
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
  /v1/studies:
    get:
      summary: 스터디 목록 조회
      tags:
        - 스터디
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStudiesResponse'
              examples:
                example-1:
                  value:
                    studies:
                      - title: 코테1
                        participantNumber: 13
                        tags:
                          - name: 알고리즘
                        attendance:
                          beginAt: '10:00'
                        id: 1
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-v1-studies
      description: |-
        모든 스터디를 검색하고 싶다면
        /v1/studies

        스터디를 검색하고 싶다면
        /v1/studies?search={키워드}
      parameters:
        - schema:
            type: string
          in: query
          name: search
          description: 검색 키워드
      security:
        - Authorization: []
    post:
      summary: 스터디 생성
      operationId: post-v1-studies
      responses:
        '201':
          description: 성공적으로 스터디 생성한 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStudyResponse'
              examples:
                example-1:
                  value:
                    study:
                      title: 코테1
                      participantNumber: 10
                      tags:
                        - name: 알고리즘
                      attendance:
                        beginAt: '10:00'
                      id: 1
                      paricipantLimit: 30
                      description: 설명
                      owner:
                        id: 0
                        name: 홍길동
                        major: 컴퓨터학부
                        email: email@gmail.com
        '400':
          description: 요청 바디 형식이 잘못된 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: ''
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStudyRequest'
        description: ''
      tags:
        - 스터디
  /v1/users/change-password:
    parameters: []
    post:
      summary: 비밀번호 변경
      tags:
        - 사용자
      responses:
        '204':
          description: 비밀번호 변경 성공한 경우
        '400':
          description: 요청 바디 형식이 잘못된 경우입니다
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 기존 비밀번호가 잘못된 경우입니다
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-v1-users-users-change-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        description: ''
      security:
        - Authorization: []
  '/v1/studies/{studyId}':
    parameters:
      - schema:
          type: integer
        name: studyId
        in: path
        required: true
        description: 스터디 id
    get:
      summary: 스터디 조회
      tags:
        - 스터디
      responses:
        '200':
          description: 스터디를 성공적으로 조회한 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStudyResponse'
              examples:
                example-1:
                  value:
                    study:
                      title: 코테1
                      participantNumber: 10
                      tags:
                        - name: 알고리즘
                      attendance:
                        beginAt: '10:00'
                      id: 1
                      paricipantLimit: 30
                      description: 설명
                      owner:
                        id: 0
                        name: 홍길동
                        major: 컴퓨터학부
                        email: email@gmail.com
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 스터디가 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-v1-studies-studyId
      security:
        - Authorization: []
      description: ''
  '/v1/studies/{studyId}/participate':
    parameters:
      - schema:
          type: integer
        name: studyId
        in: path
        required: true
        description: 스터디 id
    post:
      summary: 스터디 참여
      operationId: post-v1-studies-studyId-participate
      responses:
        '204':
          description: 성공적으로 스터디 참여된 경우
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 스터디가 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: |-
            최대 참여 인원이 다 차서
            더 이상 참여할 수 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: ''
      security:
        - Authorization: []
      tags:
        - 스터디
    get:
      summary: 참가하고 있는 스터디인지 확인
      operationId: get-v1-studies-studyId-participate
      responses:
        '200':
          description: 성공적으로 참가하고 있는 스터디인지 확인한 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckParticipateStatusResponse'
              examples:
                example-1:
                  value:
                    status: PENDING
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 스터디가 존재하지 않는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - 스터디
      description: |-
        스터디를 클릭했을 때 이 API를 호출하여 이미 참가하고 있는 스터디라면 커뮤니티 화면을 보여주고

        참여하고 있지 않은 스터디라면 스터디에 참가할 수 있는 화면을 보여줍니다
      security:
        - Authorization: []
  /v1/study-logs:
    get:
      summary: 공부한 기록 조회
      tags:
        - 스터디
      parameters:
        - schema:
            type: string
            format: date
          in: query
          name: from
          description: 시작 날짜
          required: true
        - schema:
            type: string
            format: date
          in: query
          name: to
          description: 종료 날짜
          required: true
        - schema:
            type: array
            items:
              type: integer
            example: '1,2,3'
          in: query
          name: studyId
          description: 스터디 id 목록
      responses:
        '200':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStudyLogsResponse'
              examples:
                example-1:
                  value:
                    studyLogs:
                      - weekday: MON
                        date: '2019-08-24'
                        action: BEGIN
                        time: '10:00'
                        study:
                          title: 코테1
                          participantNumber: 10
                          tags:
                            - name: 알고리즘
                          attendance:
                            beginAt: '10:00'
                          id: 1
                        id: 1
                      - weekday: MON
                        date: '2019-08-24'
                        action: END
                        time: '19:00'
                        study:
                          title: 코테1
                          participantNumber: 10
                          tags:
                            - name: 알고리즘
                          attendance:
                            beginAt: '10:00'
                          id: 1
                        id: 2
        '401':
          description: |-
            ㅍAuthorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Authorization: []
      description: |
        `/v1/study-logs?from=2021-01-01&to=2021-01-02`

        2021-01-01~2021-01-02 사이에 있는 모든 스터디에 대한 기록을 조회합니다

        `/v1/study-logs?from=2021-01-01&to=2021-01-02&studyId=1,2,3`

        2021-01-01~2021-01-02 사이에 있고 스터디 id가 1,2,3인 스터디에 대한 기록을 조회합니다
      operationId: ''
    post:
      summary: 공부 시간 기록하기
      operationId: post-v1-study-logs
      responses:
        '204':
          description: 공부 시간 기록 성공한 경우
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 요청 바디에 보낸 studyId를 id로 가진 스터디가 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStudyLogRequest'
      tags:
        - 스터디
  '/v1/studies/{studyId}/attendances':
    parameters:
      - schema:
          type: integer
        name: studyId
        in: path
        required: true
        description: 스터디 아이디
    post:
      summary: 출석 인증 사진 업로드
      operationId: post-v1-studies-studyId-attachments
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAttendanceImageResponse'
              examples:
                example-1:
                  value:
                    attendance:
                      id: 1
                      url: 'http://example.com'
                      createdAt: '2019-08-24T14:15:22Z'
                      user:
                        id: 1
                        name: 홍길동
                        major: 컴퓨터학부
                        email: email@gmail.com
                      status: PRESENT
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 스터디에 참가하고 있지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 스터디가 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Authorization: []
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAttandanceImageRequest'
      parameters: []
      tags:
        - 스터디
    get:
      summary: 출석 현황 조회
      operationId: get-v1-studies-studyId-attendances
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  attendances:
                    type: array
                    items:
                      $ref: '#/components/schemas/AttandanceImageItem'
                required:
                  - attendances
              examples:
                example-1:
                  value:
                    attendances:
                      - id: 1
                        url: 'http://example.com'
                        createdAt: '2019-08-24T14:15:22Z'
                        user:
                          id: 1
                          name: 홍길동
                          major: 컴퓨터학부
                          email: email@gmail.com
                        status: PRESENT
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 스터디에 참가하고 있지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 스터디가 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: |-
        오늘 출석 현황 조회하고 싶은 경우

        `/v1/studies/3/attendances`

        2020-01-01 출석 현황 조회하고 싶은 경우

        `/v1/studies/3/attendances?date=2020-01-01`
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
          in: query
          name: date
          description: 출석 현황 조회하고 싶은 날짜(값이 주어지지 않는다면 오늘 출석 현황을 조회합니다)
      tags:
        - 스터디
  '/v1/studies/{studyId}/posts':
    get:
      summary: 게시글 목록 조회
      tags:
        - 커뮤니티
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    description: 게시글 목록
                    items:
                      $ref: '#/components/schemas/PostSummary'
                required:
                  - posts
              examples:
                example-1:
                  value:
                    posts:
                      - id: 1
                        title: 게시글 제목
                        createdAt: '2019-08-24T14:15:22Z'
                        writer:
                          id: 1
                          name: 홍길동
                          major: 컴퓨터학부
                          email: email@gmail.com
        '400':
          description: |-
            잘못된 요청을 보낸 경우
            (게시판 이름이 잘못된 경우)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 스터디에 참가하고 있지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 스터디가 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-v1-posts
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
            enum:
              - free
              - question
              - notice
          in: query
          name: boardName
          description: 게시판 이름
          required: true
        - schema:
            type: integer
          in: query
          name: page
          description: 조회할 페이지 번호
          required: true
        - schema:
            type: integer
          in: query
          name: size
          description: 페이지 당 조회할 항목 개수
          required: true
      description: |-
        스터디 id가 3인 스터디의 자유게시판에서, 0페이지에 16개의 게시글을 불러오고 싶다면

        `/v1/studies/3/posts?boardName=free&page=0&size=16`
    post:
      summary: 게시글 생성
      operationId: post-v1-posts
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  post:
                    $ref: '#/components/schemas/PostItem'
              examples:
                example-1:
                  value:
                    post:
                      id: 1
                      title: 게시글 제목
                      content: 게시글 내용
                      images:
                        - 'http://example.com'
                      writer:
                        id: 1
                        name: 홍길동
                        major: 컴퓨터학부
                        email: email@gmail.com
                      createdAt: '2019-08-24T14:15:22Z'
        '400':
          description: |-
            잘못된 요청을 보낸 경우
            (게시판 이름이 잘못된 경우)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 스터디에 참가하고 있지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 스터디가 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: '** 요청 보낼 때 application/json이 아닌 multipart/form-data로 보내야 합니다 **'
      security:
        - Authorization: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewPostRequest'
      tags:
        - 커뮤니티
    parameters:
      - schema:
          type: integer
        name: studyId
        in: path
        required: true
        description: 스터디 id
  '/v1/posts/{postId}':
    parameters:
      - schema:
          type: integer
        name: postId
        in: path
        required: true
        description: 게시글 id
    get:
      summary: 게시글 조회
      tags:
        - 커뮤니티
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  post:
                    $ref: '#/components/schemas/PostItem'
                required:
                  - post
              examples:
                example-1:
                  value:
                    post:
                      id: 1
                      title: 게시글 제목
                      content: 게시글 내용
                      images:
                        - 'http://example.com'
                      writer:
                        id: 1
                        name: 홍길동
                        major: 컴퓨터학부
                        email: email@gmail.com
                      createdAt: '2019-08-24T14:15:22Z'
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 해당 게시글이 작성된 스터디에 참가하고 있지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 게시글이 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-v1-posts-postId
      security:
        - Authorization: []
  '/v1/posts/{postId}/comments':
    get:
      summary: 댓글 목록 조회
      tags:
        - 커뮤니티
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    description: 댓글 목록
                    items:
                      $ref: '#/components/schemas/CommentItem'
                required:
                  - comments
              examples:
                example-1:
                  value:
                    comments:
                      - id: 1
                        writer:
                          id: 1
                          name: 홍길동
                          major: 컴퓨터학부
                          email: email@gmail.com
                        content: 댓글 내용
                        createdAt: '2019-08-24T14:15:22Z'
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 게시글이 있는 스터디에 참여하고 있지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 게시글이 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-v1-comments
      security:
        - Authorization: []
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: 조회할 페이지 번호
          required: true
        - schema:
            type: integer
          in: query
          name: size
          description: 페이지 당 조회할 항목 수
          required: true
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
    post:
      summary: 댓글 생성
      operationId: post-v1-comments
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  comment:
                    $ref: '#/components/schemas/CommentItem'
              examples:
                example-1:
                  value:
                    comment:
                      id: 1
                      writer:
                        id: 1
                        name: 홍길동
                        major: 컴퓨터학부
                        email: email@gmail.ocm
                      content: 댓글 내용
                      createdAt: '2019-08-24T14:15:22Z'
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 게시글에 있는 스터디에 참여하고 있지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 게시글이 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCommentRequest'
      tags:
        - 커뮤니티
    parameters:
      - schema:
          type: integer
        name: postId
        in: path
        required: true
        description: 게시글 id
  /v1/users/reset-password:
    post:
      summary: 비밀번호 복구
      operationId: post-v1-users-reset-password
      responses:
        '204':
          description: 이메일로 임시 비밀번호를 전송한 경우
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 사용자가 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      tags:
        - 인증
  /v1/admin/participate-requests:
    get:
      summary: 스터디 요청 목록
      responses:
        '200':
          description: 조회 성공한 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  requests:
                    type: array
                    description: 요청 목록
                    items:
                      $ref: '#/components/schemas/ParticipateRequestItem'
                required:
                  - requests
              examples:
                example-1:
                  value:
                    requests:
                      - user:
                          id: 1
                          name: 홍길동
                          major: 컴퓨터학부
                          email: email@gmail.com
                        createdAt: '2019-08-24T14:15:22Z'
                        id: 1
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 내가 만든 스터디가 아닌 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 스터디가 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-v1-admin-studies
      parameters:
        - schema:
            type: integer
          in: query
          name: studyId
          required: true
          description: 스터디 id
      description: ''
      security:
        - Authorization: []
      tags:
        - 스터디
    parameters: []
  '/v1/admin/participate-requests/{requestId}':
    parameters:
      - schema:
          type: integer
        name: requestId
        in: path
        required: true
        description: 요청 id
    put:
      summary: 스터디 참여 요청 상태 변경
      operationId: put-v1-admin-participate-requests-requestId
      responses:
        '200':
          description: 상태 변경에 성공한 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeParticipateRequestStatusResponse'
              examples:
                example-1:
                  value:
                    status: NONE
        '400':
          description: 잘못된 요청을 보낸 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 해당 요청의 스터디 주인이 아닌 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 참여 요청이 없는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - 스터디
      security:
        - Authorization: []
  '/v1/users/{userId}/studies':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: 사용자 id
    get:
      summary: 내가 참여하고 있는 스터디 조회
      tags:
        - 사용자
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStudiesResponse'
        '401':
          description: |-
            Authorizion 헤더 형식이 잘못된 경우 (아래와 같은 형식이어야 합니다)
            `Bearer {accesstoken}`

            또는 Authorizion 헤더에 access token을 전달하지 않은 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 다른 사용자가 참여하고 있는 스터디 목록 조회하려는 경우
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-v1-users-userId-studies
      description: 내 스터디를 조회하고 싶다
      security:
        - Authorization: []
components:
  schemas:
    SignInRequest:
      title: SignInRequest
      type: object
      properties:
        email:
          type: string
          description: 사용자 이메일
        password:
          type: string
          description: 사용자 비밀번호
      required:
        - email
        - password
    TokenResponse:
      title: TokenResponse
      type: object
      properties:
        accessToken:
          type: string
          description: access token
        user:
          $ref: '#/components/schemas/UserDetail'
      required:
        - accessToken
        - user
      x-examples: {}
    ErrorResponse:
      title: ErrorResponse
      type: object
      properties:
        timestamp:
          type: integer
          description: 에러 발생 시간 timestamp
        status:
          description: http status code
          type: integer
        error:
          type: string
          description: http status reason phrase
        message:
          type: string
          description: 에러 메시지
        path:
          type: string
          description: 에러 발생한 api path
      required:
        - timestamp
        - status
        - error
        - message
        - path
    SignUpRequest:
      title: SignUpRequest
      type: object
      properties:
        id:
          type: string
          description: '사용자 아이디  '
        major:
          type: string
          description: 사용자 전공
        name:
          type: string
          description: 사용자 이름
        password:
          type: string
          description: 사용자 비밀번호
        email:
          type: string
          description: 이메일
          format: email
      required:
        - id
        - major
        - name
        - password
        - email
    StudySummary:
      title: StudySummary
      type: object
      properties:
        title:
          type: string
          description: 스터디명
        participantNumber:
          description: 스터디 참여하고 있는 인원
          type: integer
        tags:
          type: array
          description: 태그 목록
          items:
            $ref: '#/components/schemas/TagItem'
        attendance:
          $ref: '#/components/schemas/AttendanceItem'
        id:
          type: integer
          description: 스터디 id
      required:
        - title
        - participantNumber
        - tags
        - attendance
        - id
    TagItem:
      title: TagItem
      type: object
      properties:
        name:
          type: string
          description: 태그 이름
      required:
        - name
    AttendanceItem:
      title: AttendanceItem
      type: object
      properties:
        beginAt:
          type: string
          description: 스터디 출석 정기적으로 시작하는 시간
      required:
        - beginAt
    GetStudiesResponse:
      title: GetStudiesResponse
      type: object
      properties:
        studies:
          type: array
          items:
            $ref: '#/components/schemas/StudySummary'
    ChangePasswordRequest:
      title: ChangePasswordRequest
      type: object
      properties:
        originalPassword:
          type: string
          description: 기존 비밀번호
        newPassword:
          type: string
          description: 새로운 비밀번호
      required:
        - originalPassword
        - newPassword
    UserDetail:
      title: UserDetail
      type: object
      properties:
        id:
          description: 사용자 아이디
          type: integer
        name:
          type: string
          description: 사용자 이름
        major:
          type: string
          description: 사용자 전공
        email:
          type: string
          description: 사용자 이메일
      required:
        - id
        - name
        - major
        - email
    StudyDetail:
      title: StudyDetail
      type: object
      description: ''
      properties:
        title:
          type: string
          description: 스터디명
        participantNumber:
          description: 스터디 참여하고 있는 인원
          type: integer
        tags:
          type: array
          description: 태그 목록
          items:
            $ref: '#/components/schemas/TagItem'
        attendance:
          $ref: '#/components/schemas/AttendanceItem'
        id:
          type: integer
          description: 스터디 id
        paricipantLimit:
          type: integer
          description: 최대 참가 인원 수
        description:
          type: string
          description: 스테디 설명
        owner:
          $ref: '#/components/schemas/UserDetail'
      required:
        - title
        - participantNumber
        - tags
        - attendance
        - id
        - paricipantLimit
        - description
        - owner
    GetStudyResponse:
      title: GetStudyResponse
      type: object
      properties:
        study:
          $ref: '#/components/schemas/StudyDetail'
      required:
        - study
    CheckParticipateStatusResponse:
      title: CheckParticipateStatusResponse
      type: object
      description: |-
        NONE: 아무것도 안한 상태
        PENDING: 요청 보낸 상태
        ACCEPTED: 승인 완료
        REJECTED: 승인 거부
      properties:
        status:
          type: string
          description: 스터디 참여하고 있는 지 여부
          enum:
            - PENDING
            - ACCEPTED
            - NONE
            - REJECTED
      required:
        - status
    NewStudyRequest:
      title: NewStudyRequest
      type: object
      properties:
        title:
          type: string
          description: 스터디명
        description:
          type: string
          description: 스터디 상세 설명
        participantLimit:
          type: integer
          description: 최대 참여 인원 수
        tags:
          type: array
          description: 태그 목록
          items:
            type: string
        beginAt:
          type: string
          format: time
          description: 스터디 시작 시간
      required:
        - title
        - description
        - participantLimit
        - tags
        - beginAt
    NewAttendanceRequest:
      title: NewAttendanceRequest
      type: object
      properties:
        beginAt:
          type: string
          description: 스터디 출석 정기적으로 시작하는 시간
          format: time
      required:
        - beginAt
    StudyLogItem:
      title: StudyLogItem
      type: object
      x-examples:
        example-1:
          weekday: MON
          date: '2019-08-24'
          action: BEGIN
          time: '09:00:00'
      description: |-
        요일, 날짜, 동작(시작, 종료), 시간, 스터디 정보를 가지고 있습니다

        스터디 정보는 해당 기록이 어떤 스터디에 대한 기록인지 확인할 때 사용할 수 있습니다
      properties:
        weekday:
          type: string
          description: 요일
          enum:
            - MON
            - TUE
            - WED
            - THU
            - FRI
            - SAT
            - SUN
        date:
          type: string
          format: date
          description: 날짜
        action:
          type: string
          enum:
            - BEGIN
            - END
          description: '동작(시작, 종료 중 하나)'
        time:
          type: string
          format: time
          description: 시간
        study:
          $ref: '#/components/schemas/StudySummary'
        id:
          type: integer
          description: 스터디 기록 id
      required:
        - weekday
        - date
        - action
        - time
        - study
        - id
    GetStudyLogsResponse:
      title: GetStudyLogsResponse
      type: object
      properties:
        studyLogs:
          type: array
          description: 공부한 기록 로그 목록
          items:
            $ref: '#/components/schemas/StudyLogItem'
      required:
        - studyLogs
      description: 스터디 기록 목록에 대한 정보를 가지고 있습니다
    NewStudyLogRequest:
      title: NewStudyLogRequest
      type: object
      properties:
        action:
          type: string
          enum:
            - BEGIN
            - END
          description: '행위(시작, 종료 중 하나)'
        studyId:
          type: integer
          description: 스터디 id
      required:
        - action
        - studyId
    NewAttandanceImageRequest:
      title: NewAttachmentRequest
      type: object
      properties:
        image:
          type: string
          format: uuid
          description: 업로드할 이미지 파일
        studyId:
          type: integer
          description: 스터디 id
      required:
        - image
        - studyId
    AttandanceImageItem:
      title: AttandanceImageItem
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
          format: uri
          description: 이미지 url
        createdAt:
          type: string
          description: 출석 인증 사진 올린 시간
          format: date-time
        user:
          $ref: '#/components/schemas/UserDetail'
        status:
          type: string
          description: 출석 현황
          enum:
            - PRESENT
            - LATE
            - ABSENT
      required:
        - url
        - createdAt
        - user
        - status
    PostAttendanceImageResponse:
      title: PostAttendanceImageResponse
      type: object
      properties:
        attendance:
          $ref: '#/components/schemas/AttandanceImageItem'
      required:
        - attendance
    PostSummary:
      title: PostSummary
      type: object
      properties:
        id:
          type: integer
          description: 게시글 id
        title:
          type: string
          description: 게시글 제목
        createdAt:
          type: string
          format: date-time
          description: 게시글 작성일
        writer:
          $ref: '#/components/schemas/UserDetail'
      required:
        - id
        - title
        - createdAt
        - writer
    NewPostRequest:
      title: NewPostRequest
      type: object
      properties:
        boardName:
          type: string
          description: 게시글 제목
        title:
          type: string
          description: 게시글 제목
        content:
          type: string
          description: 게시글 내용
        images:
          type: array
          description: 첨부파일 목록
          items:
            type: string
            format: binary
      required:
        - boardName
        - title
        - content
        - images
    PostItem:
      title: PostItem
      type: object
      properties:
        id:
          description: 게시글 id
          type: integer
        title:
          type: string
          description: 게시글 제목
        content:
          type: string
          description: 게시글 내용
        images:
          type: array
          description: 이미지 주소 목록
          items:
            type: string
            format: uri
        writer:
          $ref: '#/components/schemas/UserDetail'
        createdAt:
          type: string
          format: date-time
          description: 게시글 작성일
      required:
        - id
        - title
        - content
        - images
        - writer
        - createdAt
    CommentItem:
      title: CommentItem
      type: object
      properties:
        id:
          description: 댓글 id
          type: integer
        writer:
          $ref: '#/components/schemas/UserDetail'
        content:
          type: string
          description: 댓글 내용
        createdAt:
          type: string
          format: date-time
          description: 댓글 작성일
      required:
        - id
        - writer
        - content
        - createdAt
    NewCommentRequest:
      title: NewCommentRequest
      type: object
      properties:
        content:
          type: string
          description: 댓글 내용
        postId:
          type: string
          description: 게시글 id
      required:
        - content
        - postId
    ResetPasswordRequest:
      title: ResetPasswordRequest
      type: object
      properties:
        email:
          type: string
          description: 이메일
        id:
          type: string
          description: 사용자 아이디
      required:
        - email
        - id
    ParticipateRequestItem:
      title: ParticipateRequestItem
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserDetail'
        createdAt:
          type: string
          description: 요청 보낸 시간
          format: date-time
        id:
          type: integer
          description: 창여 요청 id
      required:
        - user
        - createdAt
        - id
    ChangeParticipateRequestStatusRequest:
      title: ChangeParticipateRequestStatusRequest
      type: object
      description: |-
        NONE: 아무것도 안한 상태

        PENDING: 요청 보낸 상태

        ACCEPTED: 승인 완료

        REJECTED: 승인 거부
      properties:
        status:
          type: string
          description: ''
          enum:
            - NONE
            - PENDING
            - ACCEPTED
            - REJECTED
      required:
        - status
    ChangeParticipateRequestStatusResponse:
      title: ChangeParticipateRequestStatusResponse
      type: object
      description: |-
        NONE: 아무것도 안한 상태

        PENDING: 요청 보낸 상태

        ACCEPTED: 승인 완료

        REJECTED: 승인 거부
      properties:
        status:
          type: string
          description: ''
          enum:
            - NONE
            - PENDING
            - ACCEPTED
            - REJECTED
      required:
        - status
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
tags:
  - name: 인증
  - name: v1
  - name: 스터디
  - name: 사용자
  - name: 커뮤니티
